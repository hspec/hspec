#!/bin/bash
set -o nounset
set -o errexit

cd "$(dirname "$0")"

versions=(
  "2.8.0"
  "2.8.1"
  "2.8.2"
  "2.8.3"
  "2.8.4"
  "2.8.5"
  "2.9.0"
  "2.9.1"
  "2.9.2"
  "2.9.3"
  "2.9.4"
  "2.9.5"
  "2.9.6"
  "2.9.7"
  "2.10.0"
  "2.10.0.1"
  "2.10.1"
  "2.10.2"
  "2.10.3"
  "2.10.4"
  "2.10.5"
  "2.10.6"
  "2.10.7"
  "2.10.8"
  "2.10.9"
)

for version in "${versions[@]}"; do
  echo "$version"
  echo "constraints: any.hspec-core ==$version" > cabal.project.freeze
  cabal build
  api-dump

  file=api/Test.Hspec.Api.Formatters.V1
  sed -i 's/Test.Hspec.Core.Formatters.Free.Free/Test.Hspec.Core.Formatters.V1.Free.Free/g' "$file"
  sed -i 's/Test.Hspec.Core.Formatters.Monad.FormatF/Test.Hspec.Core.Formatters.V1.Monad.FormatF/g' "$file"
  sed -i 's/Test.Hspec.Core.Config.Options.Config/Test.Hspec.Core.Config.Definition.Config/g' "$file"

  file=api/Test.Hspec.Api.Formatters.V2
  sed -i 's/Test.Hspec.Core.Config.Options.Config/Test.Hspec.Core.Config.Definition.Config/g' "$file"

  sed -i 's/^type FormatM = hspec-core:Test.Hspec.Core.Formatters.Free.Free.*/newtype FormatM a = hspec-core:Test.Hspec.Core.Formatters.Internal.FormatM (Control.Monad.Trans.State.Lazy.StateT (GHC.IORef.IORef hspec-core:Test.Hspec.Core.Formatters.Internal.FormatterState) IO a)/g' "$file"

  grep -xv "type role FormatM nominal" "$file" > "${file}.new"
  mv "${file}.new" "$file"

  pattern='^externalDiffAction ::'
  cat <(grep "$pattern" "$file") <(grep -v "$pattern" "$file") > "${file}.new"
  mv "${file}.new" "$file"

  pattern='^diffContext ::'
  cat <(grep "$pattern" "$file") <(grep -v "$pattern" "$file") > "${file}.new"
  mv "${file}.new" "$file"

  file=api/Test.Hspec.Api.Format.V1
  sed -i 's/Test.Hspec.Core.Config.Options.Config/Test.Hspec.Core.Config.Definition.Config/g' "$file"

  git diff --quiet api || (git diff --color api && false)
  cabal test --enable-tests --test-show-details=direct
done

rm cabal.project.freeze

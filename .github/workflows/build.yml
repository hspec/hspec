name: build

# cancel in-progress builds for the same pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    name: ${{ matrix.os }} / GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-18.04
        ghc:
          - 7.4.1
          - 7.4.2
          - 7.6.3
          - 7.8.4
          - 7.10.3
          - 8.0.2
          - 8.2.2
          - 8.4.1
          - 8.4.2
          - 8.4.3
          - 8.4.4
          - 8.6.1
          - 8.6.2
          - 8.6.3
          - 8.6.4
          - 8.6.5
          - 8.8.1
          - 8.8.2
          - 8.8.3
          - 8.8.4
          - 8.10.1
          - 8.10.2
          - 8.10.3
          - 8.10.4
          - 8.10.5
          - 8.10.6
          - 8.10.7
          - 9.0.1
          - 9.0.2
          - 9.2.1
          - 9.2.2
          - 9.2.3
          - 9.2.4
          - 9.4.1
        include:
          - os: macos-latest
            ghc: latest
          - os: windows-latest
            ghc: latest

    steps:
      - uses: actions/checkout@v3
      - uses: hspec/setup-haskell@v1
        with:
          ghc-version: ${{ matrix.ghc }}

      - uses: sol/run-haskell-tests@v1

      - name: Run regression tests
        run: |
          cabal install --lib --package-env test/regression/issue-169/
          test/regression/issue-169/run.sh
          cabal install --lib --package-env test/regression/issue-270/
          test/regression/issue-270/run.sh
        if: startsWith(matrix.ghc, '8.') && matrix.ghc != '8.0.1'

  success:
    needs: build
    runs-on: ubuntu-latest
    if: always() # this is required as GitHub considers "skipped" jobs as "passed" when checking branch protection rules

    steps:
      - run: exit 1
        if: needs.build.result != 'success'

      - uses: actions/checkout@v3
      - name: Check for trailing whitespace
        run: '! git grep -I "\s\+$"'
